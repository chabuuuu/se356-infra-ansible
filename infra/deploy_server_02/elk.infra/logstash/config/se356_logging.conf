input {
    tcp {
        port => 5562
        codec => json_lines
    }
}

filter {
if [message] =~ /^REQUEST_BACKEND_LOG/ {
    mutate {
      gsub => ["message", "REQUEST_BACKEND_LOG ", ""]
    }
    
    json {
      source => "message"
      target => "parsed_message"
      remove_field => ["message"]
    }

    # Explicitly map fields with fallback
    if [parsed_message][requestBody] {
      mutate {
        add_field => {
          "url" => "%{[parsed_message][url]}"
          "method" => "%{[parsed_message][method]}"
          "status" => "%{[parsed_message][status]}"
          "requestHeader" => "%{[parsed_message][requestHeader]}"
          "requestBody" => "%{[parsed_message][requestBody]}"
          "responseBody" => "%{[parsed_message][responseBody]}"
          "type" => "%{[parsed_message][type]}"
          "username" => "%{[parsed_message][username]}"
          "userId" => "%{[parsed_message][userId]}"
          "errorMessage" => "%{[parsed_message][errorMessage]}"
          "requestAt" => "%{[parsed_message][requestAt]}"
        }
      }
    }

    mutate {
      add_field => { "index_type" => "se356-request-backend-logs" }
      remove_field => ["parsed_message"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{index_type}-%{+YYYY.MM.dd}"
    user => "${ELASTICSEARCH_USER}"
    password => "${ELASTICSEARCH_PASSWORD}"
  }
}
